{"version":3,"sources":["components/StateProvider.js","components/Header.js","pages/Home.js","pages/Login/Login.js","pages/Contact/Contact.js","components/CheckoutProduct/CheckoutProduct.js","reducer.js","components/Subtotal.js","pages/Checkout/Checkout.js","components/Product/Product.js","pages/Products/Products.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","cart","className","width","height","viewBox","xmlns","d","to","length","type","Home","Login","id","for","name","htmlFor","Contact","action","method","cols","rows","CheckoutProduct","title","image","price","dispatch","src","alt","onClick","getCartTotal","reduce","amount","item","state","newCart","index","findIndex","cartItem","splice","console","warn","Subtotal","renderText","displayType","thousandSeparator","prefix","CheckoutForm","useState","succeeded","setSucceeded","email","setEmail","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","window","fetch","headers","body","JSON","stringify","items","then","res","json","data","handleChange","event","a","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","receipt_email","payment_method","card","getElement","CardElement","payload","map","key","onSubmit","onChange","e","target","placeholder","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","role","href","Product","Products","uuidv4","rating","promise","loadStripe","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","user","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dd24e92d.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({\r\n    reducer, initialState, children\r\n}) => {\r\n    return <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n}\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket'\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from '../components/StateProvider'\r\n\r\nconst Header = () => {\r\n    const [{ cart }] = useStateValue();\r\n    return (\r\n        <nav className=\"flex items-center justify-between flex-wrap bg-red-900 p-6\">\r\n            <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n                <svg className=\"fill-current h-8 w-8 mr-2\" width=\"54\" height=\"54\" viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\" /></svg>\r\n                <span className=\"font-semibold text-xl tracking-tight\">Hench Printworks</span>\r\n            </div>\r\n            <div className=\"block lg:hidden\">\r\n                <button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n                    <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n                <div className=\"text-sm lg:flex-grow\">\r\n                    <Link to=\"/\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        Home\r\n      </Link>\r\n                    <Link to=\"/checkout\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        Checkout\r\n      </Link>\r\n                    <Link to=\"/contact\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        Contact\r\n      </Link>\r\n                    <Link to=\"/login\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        Login/Sign Up\r\n      </Link>\r\n                    <Link to=\"/product\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        Apparel\r\n      </Link>\r\n                    <Link to=\"/checkout\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n                        <ShoppingBasketIcon />\r\n                        <span>{cart?.length}</span>\r\n                    </Link>\r\n                    <input type=\"text\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\" />\r\n\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"container\" id=\"container\">\r\n            <form className=\"signup\">\r\n                <h1>Login <i className=\"fas fa-book-open\"></i></h1>\r\n                <div className=\"form-control\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" />\r\n                    <label htmlFor=\"\">Password</label>\r\n                    <input type=\"password\" name=\"password\" />\r\n                </div>\r\n                <button className=\"form-btn btn-warning\">Login</button>\r\n            </form>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"brand\"><span>Acme</span>Web Design</h1>\r\n            <div className=\"wrapper animated bounceInLeft\">\r\n                <div className=\"company-info\">\r\n                    <h3>Acme Web Design</h3>\r\n                    <ul>\r\n                        <li><i className=\"fa fa-road\"></i> 44 Something Street</li>\r\n                        <li><i className=\"fa fa-phone\"></i>(555) 555 - 5555</li>\r\n                        <li><i className=\"fa fa-envelope\"></i>test@acme.test</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"contact\">\r\n                    <h3>Email Us</h3>\r\n                    <form action=\"send\" method=\"post\">\r\n                        <p>\r\n                            <label htmlFor=\"\">Name</label>\r\n                            <input type=\"text\" name=\"name\" />\r\n                        </p>\r\n                        <p>\r\n                            <label htmlFor=\"\">Company</label>\r\n                            <input type=\"text\" name=\"company\" />\r\n                        </p>\r\n                        <p>\r\n                            <label htmlFor=\"\">Email Address</label>\r\n                            <input type=\"email\" name=\"email\" />\r\n                        </p>\r\n                        <p>\r\n                            <label htmlFor=\"\">Phone Number</label>\r\n                            <input type=\"text\" name=\"phone\" />\r\n                        </p>\r\n                        <p className=\"full\">\r\n                            <label htmlFor=\"\">Message</label>\r\n                            <textarea name=\"message\" cols=\"30\" rows=\"10\"></textarea>\r\n                        </p>\r\n                        <p className=\"full\"><button type=\"submit\">Submit</button>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport './CheckoutProduct.css'\r\nimport { useStateValue } from '../StateProvider'\r\n\r\n\r\nconst CheckoutProduct = ({ id, title, image, price }) => {\r\n\r\n    const [{ cart }, dispatch] = useStateValue();\r\n\r\n    const removeFromCart = () => {\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id: id,\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct-image\" src={image} alt=\"\" />\r\n            <div className=\"checkoutProduct-info\">\r\n                <p>{title}</p>\r\n                <p className=\"checkoutProduct-price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <button onClick={removeFromCart}>Remove From Cart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","export const getCartTotal = (cart) => {\r\n    return cart?.reduce((amount, item) => item.price + amount, 0)\r\n}\r\n\r\nexport const initialState = {\r\n    cart: [],\r\n    user: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_BASKET':\r\n            return { ...state, cart: [...state.cart, action.item] };\r\n        case 'REMOVE_FROM_BASKET':\r\n            let newCart = [...state.cart];\r\n\r\n            const index = state.cart.findIndex((cartItem) => cartItem.id === action.id)\r\n\r\n            if (index >= 0) {\r\n                newCart.splice(index, 1);\r\n            } else {\r\n                console.warn(`Can't remove product (id: ${action.id} as it's no longer available)`)\r\n            }\r\n            return { ...state, cart: newCart };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getCartTotal } from '../reducer';\r\n\r\nconst Subtotal = () => {\r\n    const [{ cart }, dispatch] = useStateValue();\r\n    return (\r\n        <div>\r\n            <div className=\"subtotal\">\r\n                <CurrencyFormat\r\n                    renderText={(value) => (\r\n                        <>\r\n                            <p>\r\n                                Subtotal ({cart.length} items): <strong>\r\n                                    {value}\r\n                                </strong>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                    value={getCartTotal(cart)}\r\n                    displayType={'text'}\r\n                    thousandSeparator={true}\r\n                    prefix={'$'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport './Checkout.css'\r\nimport { useStateValue } from \"../../components/StateProvider\";\r\nimport CheckoutProduct from '../../components/CheckoutProduct/CheckoutProduct';\r\nimport Subtotal from '../../components/Subtotal';\r\nexport default function CheckoutForm() {\r\n    const [{ cart }] = useStateValue();\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [processing, setProcessing] = useState('');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    useEffect(() => {\r\n        // Create PaymentIntent as soon as the page loads\r\n        window\r\n            .fetch(\"/create-payment-intent\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] })\r\n            })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setClientSecret(data.clientSecret);\r\n            });\r\n    }, []);\r\n    const cardStyle = {\r\n        style: {\r\n            base: {\r\n                color: \"#32325d\",\r\n                fontFamily: 'Arial, sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                fontSize: \"16px\",\r\n                \"::placeholder\": {\r\n                }\r\n            },\r\n            invalid: {\r\n                color: \"#fa755a\",\r\n                iconColor: \"#fa755a\"\r\n            }\r\n        }\r\n    };\r\n    const handleChange = async (event) => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    };\r\n    const handleSubmit = async ev => {\r\n        ev.preventDefault();\r\n        setProcessing(true);\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            receipt_email: email,\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        });\r\n        if (payload.error) {\r\n            setError(`Payment failed ${payload.error.message}`);\r\n            setProcessing(false);\r\n        } else {\r\n            setError(null);\r\n            setProcessing(false);\r\n            setSucceeded(true);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"checkout\">\r\n                {cart?.length === 0 ? (\r\n                    <div>\r\n                        <h2>Your Shopping Cart is Empty</h2>\r\n                        <p>You have no items in your cart. To buy one or more items, click \"Add to Cart\" next to the item</p>\r\n                    </div>\r\n                ) : (<div>\r\n                    <h2 className=\"checkout-title\">Your Shopping Cart</h2>\r\n                    {cart.map((item) => (\r\n                        <CheckoutProduct key={item.id}\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price} />\r\n                    ))}\r\n                </div>\r\n                    )}\r\n            </div>\r\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n                {cart.length > 0 && (\r\n                    <Subtotal />\r\n                )}\r\n                <input\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Enter email address\"\r\n                />\r\n                <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\r\n                <button\r\n                    disabled={processing || disabled || succeeded}\r\n                    id=\"submit\"\r\n                >\r\n                    <span id=\"button-text\">\r\n                        {processing ? (\r\n                            <div className=\"spinner\" id=\"spinner\"></div>\r\n                        ) : (\r\n                                \"Pay\"\r\n                            )}\r\n                    </span>\r\n                </button>\r\n                {/* Show any error that happens when processing the payment */}\r\n                {error && (\r\n                    <div className=\"card-error\" role=\"alert\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                {/* Show a success message upon completion */}\r\n                <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n                    Payment succeeded, see the result in your\r\n        <a\r\n                        href={`https://dashboard.stripe.com/test/payments`}\r\n                    >\r\n                        {\" \"}\r\n          Stripe dashboard.\r\n        </a> Refresh the page to pay again.\r\n      </p>\r\n            </form>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport './Product.css'\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nconst Product = ({ id, title, image, price }) => {\r\n    const [{ cart }, dispatch] = useStateValue();\r\n    const addToCart = () => {\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id,\r\n                title,\r\n                image,\r\n                price\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product-info\">\r\n                <p>{title}</p>\r\n                <p className=\"product-price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n            </div>\r\n            <img src={image} alt=\"\" />\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport './Products.css'\r\nimport Product from '../../components/Product/Product'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst Products = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <img src=\"https://www.inspireinkclothing.com/wp-content/uploads/IMGP4483.jpg\" alt=\"\" className=\"home-image\" />\r\n            <div className=\"home-row\">\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n            </div>\r\n            <div className=\"home-row\">\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n            </div>\r\n            <div className=\"home-row\">\r\n                <Product\r\n                    id={uuidv4()}\r\n                    title=\"The Fifth Vital\"\r\n                    price={29.00}\r\n                    rating={5}\r\n                    image=\"https://m.media-amazon.com/images/I/91rTf5TWhkL._AC_UY327_FMwebp_QL65_.jpg\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Login from './pages/Login/Login'\nimport Contact from './pages/Contact/Contact'\nimport CheckoutForm from './pages/Checkout/Checkout'\nimport Products from './pages/Products/Products'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport './App.css';\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\nconst promise = loadStripe(\"pk_test_51HGqIEBMDhC88mikqdlQVcqDukgNHkTGx2aCgi4ehrebOZMVWF1sb0ogzF62CH5YLLjVBmyGa94G3IR9A25dPHPb00wN9ztCwz\");\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/checkout\">\n            <Header />\n            <Elements stripe={promise}>\n              <CheckoutForm />\n            </Elements>\n          </Route>\n          <Route path=\"/contact\">\n            <Header />\n            <Contact />\n          </Route>\n          <Route path=\"/login\">\n            <Header />\n            <Login />\n          </Route>\n          <Route path=\"/product\">\n            <Header />\n            <Products />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n        {/* lalalalalala */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './tailwind.output.css'\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './components/StateProvider'\nimport reducer, { initialState } from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}